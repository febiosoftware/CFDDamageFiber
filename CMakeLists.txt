# Generated by FEBio Studio 3.0.0

# CMake Housekeeping
cmake_minimum_required(VERSION 3.5.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_FILES_DIRECTORY ${CMAKE_BINARY_DIR}/CMakeFiles)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Name of your plugin
project(CFDDamageFiber)

# Name of the FEBio libraries you need to link to
set(FEBIO_LIB_NAMES FECore FEBioMech )

# Set a default build type if none was specified
set(default_build_type "Release")
 
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to '${default_build_type}' as none was specified.")
  set(CMAKE_BUILD_TYPE "${default_build_type}" CACHE
      STRING "Choose the type of build." FORCE)
  # Set the possible values of build type for cmake-gui
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
    "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

# Find FEBio Libs
set(FEBIO_LIBS "")
set(FEBIO_DEBUG_LIBS "")

foreach(name IN LISTS FEBIO_LIB_NAMES)
    find_library(TEMP NAMES ${name} PATHS "C:/Users/Steve/source/repos/FEBio/cmbuild22/lib/Release")
    list(APPEND FEBIO_LIBS ${TEMP})
    unset(TEMP CACHE)

    find_library(TEMP NAMES ${name} PATHS "C:/Users/Steve/source/repos/FEBio/cmbuild22/lib/Debug")
    list(APPEND FEBIO_DEBUG_LIBS ${TEMP})
    unset(TEMP CACHE)
endforeach(name)


##### Set definitions and compile options #####
if(WIN32)
    add_definitions(-DWIN32  -DFECORE_DLL /MP /openmp /wd4251 /wd4275)
elseif(APPLE)
    add_definitions(-D__APPLE__)
    set(CMAKE_OSX_DEPLOYMENT_TARGET 10.13)
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -undefined dynamic_lookup")
else()
	add_definitions(-DLINUX)
    add_compile_options(-static-libstdc++ -static-libgcc -w -Wall)
    
    set(CMAKE_BUILD_RPATH_USE_LINK_PATH FALSE)
    set(CMAKE_BUILD_RPATH $ORIGIN/../lib/)
endif()

# Set include directory
include_directories(C:/Users/Steve/source/repos/FEBio)

# Add library

file(GLOB HdrFiles "CFDDamageFiber/*.h")
file(GLOB SrcFiles "CFDDamageFiber/*.cpp")

add_library(CFDDamageFiber SHARED ${HdrFiles} ${SrcFiles})
set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT CFDDamageFiber)

# Link FEBio Libraries
foreach(name IN LISTS FEBIO_LIBS)
    target_link_libraries(CFDDamageFiber optimized ${name})
endforeach()

foreach(name IN LISTS FEBIO_DEBUG_LIBS)
    target_link_libraries(CFDDamageFiber debug ${name})
endforeach()

